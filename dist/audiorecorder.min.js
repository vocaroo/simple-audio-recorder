!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).AudioRecorder=e()}(this,function(){"use strict";let t=null,e=0,o=[],s={};function i(t){e=t;for(let t of o)t();o=[]}function r(o){/^https?:\/\//.test(o)&&(o=URL.createObjectURL(new Blob([`importScripts("${o}");`],{type:"text/javascript"}))),t=new Worker(o),e=1,t.onmessage=t=>{switch(t.data.message){case"ready":i(2);break;case"encoded":t.data.jobId in s&&s[t.data.jobId].onencoded(t.data.srcBufLen);break;case"data":t.data.jobId in s&&s[t.data.jobId].ondataavailable(t.data.data);break;case"stopped":t.data.jobId in s&&s[t.data.jobId].onstopped()}},t.onerror=t=>{console.error("mp3worker error. Is the worker URL correct?"),i(3)}}class a{constructor(t){this.jobId=([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,t=>(t^crypto.getRandomValues(new Uint8Array(1))[0]&15>>t/4).toString(16)),this.options=t,this.queuedData=0,s[this.jobId]={onencoded:t=>{this.queuedData-=t},ondataavailable:t=>{this.ondataavailable&&this.ondataavailable(t)},onstopped:()=>{delete s[this.jobId],this.onstopped&&this.onstopped()}}}static preload(t){0!=e&&3!=e||r(t)}static waitForWorker(t){return 2==e?Promise.resolve():(0!=e&&3!=e||r(t),new Promise((t,s)=>{o.push(()=>{if(2==e)t();else{let t=new Error("MP3 worker failed");t.name="WorkerError",s(t)}})}))}start(){t.postMessage({command:"start",jobId:this.jobId,options:this.options})}sendData(e){e&&e.length>0&&e[0].length>0&&(this.queuedData+=e[0].length,t.postMessage({command:"data",jobId:this.jobId,buffers:e}))}getQueuedDataLen(){return this.queuedData}stop(){t.postMessage({command:"stop",jobId:this.jobId})}}class n{constructor(){this.reset()}reset(){this.startTime=null,this.stoppedTime=null}start(){this.startTime||(this.startTime=Date.now()),this.stoppedTime&&(this.startTime+=Date.now()-this.stoppedTime,this.stoppedTime=null)}resetAndStart(){this.reset(),this.start()}stop(){this.stoppedTime||(this.stoppedTime=Date.now())}getTime(){return this.startTime?this.stoppedTime?this.stoppedTime-this.startTime:Date.now()-this.startTime:0}}function d(){return window.AudioContext||window.webkitAudioContext}const h={recordingGain:1,encoderBitRate:96,streaming:!1,streamBufferSize:5e4,forceScriptProcessor:!1,constraints:{channelCount:1,autoGainControl:!0,echoCancellation:!0,noiseSuppression:!0}};let u=null,c=null;return class{constructor(t){this.options={...h,...t},this.state=0,this.audioContext=null,this.encoder=null,this.encodedData=null,this.stopPromiseResolve=null,this.stopPromiseReject=null,this.timer=new n}static isRecordingSupported(){return d()&&navigator&&navigator.mediaDevices&&navigator.mediaDevices.getUserMedia}static preload(t){u=t,a.preload(u)}useAudioWorklet(){return window.AudioWorklet&&!(["iPad Simulator","iPhone Simulator","iPod Simulator","iPad","iPhone","iPod"].includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)&&!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)&&!this.options.forceScriptProcessor}createAndStartEncoder(t){this.encoder=new a({originalSampleRate:this.audioContext.sampleRate,numberOfChannels:t,encoderBitRate:this.options.encoderBitRate,streamBufferSize:this.options.streamBufferSize}),this.encoder.ondataavailable=t=>{this.options.streaming?this.ondataavailable&&this.ondataavailable(t):this.encodedData.push(t)},this.encoder.onstopped=()=>{this.state=0;let t=this.options.streaming?void 0:new Blob(this.encodedData,{type:"audio/mpeg"});this.onstop&&this.onstop(t),this.stopPromiseResolve(t)},this.encoder.start()}createOutputNode(t){this.useAudioWorklet()?(console.log("Using AudioWorklet"),this.outputNode=new AudioWorkletNode(this.audioContext,"audio-output-processor",{numberOfOutputs:0}),this.outputNode.port.onmessage=t=>{let{data:e}=t;1==this.state&&this.encoder.sendData(e)}):(console.log("Using ScriptProcessorNode"),this.outputNode=this.audioContext.createScriptProcessor(4096,t,t),this.outputNode.connect(this.audioContext.destination),this.outputNode.onaudioprocess=t=>{if(1==this.state){let e=t.inputBuffer,o=[];for(let t=0;t<e.numberOfChannels;t++)o.push(e.getChannelData(t));this.encoder.sendData(o)}})}createAudioNodes(t){this.createOutputNode(t),this.recordingGainNode=this.audioContext.createGain(),this.setRecordingGain(this.options.recordingGain),this.recordingGainNode.connect(this.outputNode),this.sourceNode=this.audioContext.createMediaStreamSource(this.stream),this.sourceNode.connect(this.recordingGainNode)}cleanupAudioNodes(){var t;this.stream&&((t=this.stream).getTracks?t.getTracks().forEach(t=>t.stop()):t.stop(),this.stream=null),this.useAudioWorklet()?this.outputNode&&(this.outputNode.port.onmessage=null):this.outputNode&&(this.outputNode.onaudioprocess=null),this.outputNode&&this.outputNode.disconnect(),this.recordingGainNode&&this.recordingGainNode.disconnect(),this.sourceNode&&this.sourceNode.disconnect(),this.audioContext&&this.audioContext.close()}setRecordingGain(t){this.options.recordingGain=t,this.recordingGainNode&&this.recordingGainNode.gain.setTargetAtTime(t,this.audioContext.currentTime,.01)}get time(){return this.timer.getTime()}getEncodingQueueSize(){return this.encoder?this.encoder.getQueuedDataLen():0}stoppingCheck(){if(4==this.state)throw function(){let t=new Error("AudioRecorder start cancelled by call to stop");return t.name="CancelStartError",t}()}async __start(t){if(0!=this.state)throw new Error("Called start when not in stopped state");if(null==u)throw new Error("preload was not called on AudioRecorder");this.state=3,this.encodedData=[],this.stream=null;try{await a.waitForWorker(u),this.stoppingCheck();let e=!(Object.keys(this.options.constraints).length>0)||this.options.constraints;this.stream=await navigator.mediaDevices.getUserMedia({audio:e}),this.stoppingCheck();const o=d();this.audioContext=new o,this.useAudioWorklet()&&(await this.audioContext.audioWorklet.addModule(c||(c=URL.createObjectURL(new Blob(['\n\t\tclass AudioOutputProcessor extends AudioWorkletProcessor {\n\t\t\tprocess(inputs, outputs) {\n\t\t\t\tthis.port.postMessage(inputs[0]);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tregisterProcessor("audio-output-processor", AudioOutputProcessor);\n\t'],{type:"application/javascript"})),c),{credentials:"omit"}),this.stoppingCheck());let s=function(t){let e=t.getAudioTracks();if(e.length<1)throw new Error("No audio tracks in user media stream");let o=e[0].getSettings();return"channelCount"in o?o.channelCount:1}(this.stream);this.createAndStartEncoder(s),this.createAudioNodes(s),t?(this.timer.reset(),this.state=2):(this.timer.resetAndStart(),this.state=1),this.onstart&&this.onstart()}catch(t){let e=4==this.state;throw this.cleanupAudioNodes(),this.state=0,e&&this.stopPromiseReject(t),t}}async __stop(){if(this.timer.stop(),1==this.state||2==this.state)return this.state=4,this.cleanupAudioNodes(),this.encoder.stop(),new Promise((t,e)=>{this.stopPromiseResolve=t});if(3==this.state)return this.state=4,new Promise((t,e)=>{this.stopPromiseReject=e});throw new Error("Called stop when AudioRecorder was not started")}start(){let t=this.__start(arguments.length>0&&void 0!==arguments[0]&&arguments[0]);if(t.catch(t=>{"CancelStartError"!=t.name&&this.onerror&&this.onerror(t)}),!this.onerror)return t}stop(){let t=this.__stop();if(t.catch(t=>{"CancelStartError"==t.name?this.onstop&&this.onstop(this.options.streaming?void 0:null):this.onerror&&this.onerror(t)}),!this.onerror)return t}pause(){1==this.state&&(this.state=2,this.timer.stop())}resume(){2==this.state&&(this.state=1,this.timer.start())}}});
//# sourceMappingURL=audiorecorder.min.js.map
